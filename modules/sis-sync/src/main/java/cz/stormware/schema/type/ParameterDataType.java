//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.03.14 at 09:43:22 PM CET 
//


package cz.stormware.schema.type;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for parameterDataType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="parameterDataType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="text"/>
 *     &lt;enumeration value="currency"/>
 *     &lt;enumeration value="boolean"/>
 *     &lt;enumeration value="number"/>
 *     &lt;enumeration value="integer"/>
 *     &lt;enumeration value="datetime"/>
 *     &lt;enumeration value="list"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "parameterDataType")
@XmlEnum
public enum ParameterDataType {


    /**
     * Parametr typu Text.
     * 
     */
    @XmlEnumValue("text")
    TEXT("text"),

    /**
     * Parametr typu M\u011bna.
     * 
     */
    @XmlEnumValue("currency")
    CURRENCY("currency"),

    /**
     * Parametr typu Ano/Ne.
     * 
     */
    @XmlEnumValue("boolean")
    BOOLEAN("boolean"),

    /**
     * Parametr typu \u010císlo.
     * 
     */
    @XmlEnumValue("number")
    NUMBER("number"),

    /**
     * Parametr typu \u010císlo (celé).
     * 
     */
    @XmlEnumValue("integer")
    INTEGER("integer"),

    /**
     * Parametr typu Datum.
     * 
     */
    @XmlEnumValue("datetime")
    DATETIME("datetime"),

    /**
     * Parametr typu Seznam.
     * 
     */
    @XmlEnumValue("list")
    LIST("list");
    private final String value;

    ParameterDataType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ParameterDataType fromValue(String v) {
        for (ParameterDataType c: ParameterDataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
